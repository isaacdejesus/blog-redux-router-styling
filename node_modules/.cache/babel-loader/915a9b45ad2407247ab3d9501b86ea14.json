{"ast":null,"code":"var _jsxFileName = \"/home/isaac/git/react_stuff/blog-redux-router-styling/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm.js';\nimport PostForm from './components/PostForm.js';\nimport Togglable from './components/Togglable.js';\nimport GoodNotif from './components/GoodNotif.js';\nimport blogService from './services/blogs';\nimport loginService from './services/login.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNotif, clearNotif } from './reducers/notifReducer.js';\nimport { initializePosts } from './reducers/postReducer.js';\nimport { setUser, clearUser } from './reducers/userReducer.js';\nimport { addPost, setPosts, addaPost } from './reducers/postReducer.js';\nimport Users from './components/Users';\nimport Posts from './components/Posts.js';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [vblogs, setBlogs] = useState([]);\n  const [successMsg, setSuccessMsg] = useState(null);\n  const [errMsg, setErrMsg] = useState(null);\n  const dispatch = useDispatch();\n  const notif = useSelector(state => state.notifs);\n  useEffect(() => {\n    dispatch(initializePosts());\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const addPost = postObject => {\n    dispatch(addaPost(postObject));\n    dispatch(setNotif(\"Successsssss\"));\n    setTimeout(() => {\n      dispatch(clearNotif());\n    }, 3000);\n  };\n\n  const updateLikes = blog => {\n    const updatedBlog = {\n      user: blog.user.id,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      likes: blog.likes\n    };\n    const updatedBlogId = blog.id;\n    blogService.update(blog.id, updatedBlog).then(returnedPost => {\n      setBlogs(blogs.map(blog => blog.id !== updatedBlogId ? blog : returnedPost));\n    });\n    setBlogs(blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    }));\n  };\n\n  const handleDel = id => {\n    const maybe = window.confirm(\"do you really want to delete?\");\n    if (!maybe) return;\n    const toDel = blogs.find(blog => blog.id === id);\n    blogService.del(id).then(persontoDel => {\n      setBlogs(blogs.filter(blog => blog.id !== toDel.id));\n    });\n    setBlogs(blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    }));\n    console.log(\" I am hereee\");\n    dispatch(setNotif(\"successcully deleted POst\"));\n    setTimeout(() => {\n      dispatch(clearNotif());\n    }, 3000);\n  };\n\n  const user = useSelector(state => state.user);\n  const blogs = useSelector(state => state.posts);\n\n  const handleLogOut = () => {\n    window.localStorage.clear();\n    dispatch(clearUser());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoodNotif, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogOut,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new post\",\n        children: /*#__PURE__*/_jsxDEV(PostForm, {\n          createPost: addPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        handleLikes: () => updateLikes(blog),\n        handleDel: () => handleDel(blog.id)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8psb9PFIbfiFSYXosxofL2CUsT0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/App.js"],"names":["useState","useEffect","Blog","LoginForm","PostForm","Togglable","GoodNotif","blogService","loginService","useDispatch","useSelector","setNotif","clearNotif","initializePosts","setUser","clearUser","addPost","setPosts","addaPost","Users","Posts","Routes","Route","App","vblogs","setBlogs","successMsg","setSuccessMsg","errMsg","setErrMsg","dispatch","notif","state","notifs","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","postObject","setTimeout","updateLikes","blog","updatedBlog","id","author","title","url","likes","updatedBlogId","update","then","returnedPost","blogs","map","sort","a","b","handleDel","maybe","confirm","toDel","find","del","persontoDel","filter","console","log","posts","handleLogOut","clear","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm.js'\nimport PostForm from './components/PostForm.js'\nimport Togglable from './components/Togglable.js'\nimport GoodNotif from './components/GoodNotif.js'\nimport blogService from './services/blogs'\nimport loginService from './services/login.js'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {setNotif, clearNotif} from './reducers/notifReducer.js'\nimport {initializePosts} from './reducers/postReducer.js'\nimport {setUser, clearUser} from './reducers/userReducer.js'\nimport {addPost, setPosts, addaPost} from './reducers/postReducer.js'\nimport Users from './components/Users';\nimport Posts from './components/Posts.js';\nimport {Routes, Route} from 'react-router-dom';\nconst App = () => {\n    const [vblogs, setBlogs] = useState([])\n    const [successMsg, setSuccessMsg] = useState(null)\n    const [errMsg, setErrMsg] = useState(null)\n    const dispatch = useDispatch()\n    const notif = useSelector(state => state.notifs)\n\n  useEffect(() => {\n      dispatch(initializePosts())\n  }, [dispatch, ])\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if(loggedUserJSON){\n            const user = JSON.parse(loggedUserJSON)\n            dispatch(setUser(user))\n            blogService.setToken(user.token)\n        }\n    }, [])\n    const addPost = postObject => {\n        dispatch(addaPost(postObject))\n        dispatch(setNotif(\"Successsssss\"))\n        setTimeout(()=> {\n            dispatch(clearNotif())\n        },3000)\n    }\n\n    const updateLikes = (blog) => {\n        const updatedBlog = {\n            user: blog.user.id,\n            author: blog.author,\n            title: blog.title,\n            url: blog.url,\n            likes: blog.likes\n        }\n        const updatedBlogId = blog.id\n        blogService\n            .update(blog.id, updatedBlog)\n            .then(returnedPost => {\n                setBlogs(blogs.map(blog => blog.id !== updatedBlogId ? blog : returnedPost))   \n            })\n        setBlogs(blogs.sort((a,b) => {return b.likes - a.likes}))\n    }\n    const handleDel = id => {\n        const maybe = window.confirm(\"do you really want to delete?\")\n        if(!maybe)\n            return\n        const toDel = blogs.find(blog => blog.id === id)\n        blogService\n            .del(id)\n            .then(persontoDel => {\n                setBlogs(blogs.filter(blog => blog.id !== toDel.id))\n            }) \n        \n        setBlogs(blogs.sort((a,b) => {return b.likes - a.likes}))\n        console.log(\" I am hereee\")\n        dispatch(setNotif(\"successcully deleted POst\"))\n        setTimeout(()=> {\n            dispatch(clearNotif())\n        },3000)\n    }\n    const user = useSelector(state => state.user)\n    const blogs = useSelector(state => state.posts)\n    const handleLogOut = () => {\n        window.localStorage.clear();\n        dispatch(clearUser());\n    }\n  return (\n    <div>\n      <h2>blogs</h2>\n      <GoodNotif />\n      {user === null ?\n        <Togglable buttonLabel='login'>\n          <LoginForm/>\n        </Togglable> :\n       <div>\n            <p>{user.name} logged in</p>\n            <button onClick={handleLogOut } >logout</button>\n            <Togglable buttonLabel=\"new post\">\n                <PostForm createPost={addPost}/>\n            </Togglable>\n            {blogs.map(blog =>\n            <Blog key={blog.id} blog={blog} handleLikes={()=> updateLikes(blog)} handleDel={()=> handleDel(blog.id)} />)}\n        </div>\n      }\n      <Routes>\n        <Route path=\"/\" element={<Posts />} />\n        <Route path=\"/users\" element={<Users />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}