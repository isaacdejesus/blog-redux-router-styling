{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogService from '../services/blogs.js';\nconst initialState = [];\nconst postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    setPosts(state, action) {\n      //{console.log(action.payload)}\n      return action.payload;\n    },\n\n    addPost(state, action) {\n      state.push(action.payload);\n    }\n\n  }\n});\nexport const {\n  setPosts,\n  addPost\n} = postSlice.actions;\nexport const initializePosts = () => {\n  return async dispatch => {\n    const posts = await blogService.getAll();\n    dispatch(setPosts(posts));\n  };\n};\nexport default postSlice.reducer;","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/reducers/postReducer.js"],"names":["createSlice","blogService","initialState","postSlice","name","reducers","setPosts","state","action","payload","addPost","push","actions","initializePosts","dispatch","posts","getAll","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAe;AACnB;AACA,aAAOA,MAAM,CAACC,OAAd;AACH,KAJK;;AAKNC,IAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACnBD,MAAAA,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACC,OAAlB;AACH;;AAPK;AAHgB,CAAD,CAA7B;AAcA,OAAO,MAAM;AAACH,EAAAA,QAAD;AAAWI,EAAAA;AAAX,IAAsBP,SAAS,CAACS,OAAtC;AACP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,KAAK,GAAG,MAAMd,WAAW,CAACe,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAACR,QAAQ,CAACS,KAAD,CAAT,CAAR;AACH,GAHD;AAIH,CALM;AAMP,eAAeZ,SAAS,CAACc,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogService from '../services/blogs.js'\nconst initialState = []\n\nconst postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {\n        setPosts(state, action){\n            //{console.log(action.payload)}\n            return action.payload\n        },\n        addPost(state, action) {\n            state.push(action.payload)\n        }\n    }\n})\n\nexport const {setPosts, addPost} = postSlice.actions\nexport const initializePosts = () => {\n    return async dispatch => {\n        const posts = await blogService.getAll() \n        dispatch(setPosts(posts))\n    } \n}\nexport default postSlice.reducer\n"]},"metadata":{},"sourceType":"module"}