{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport loginService from '../services/login.js';\nimport blogService from '.../services/blogs.js';\nconst initialState = null;\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      //{console.log(action.payload)}\n      return state = action.payload;\n    },\n\n    clearUser(state, action) {\n      return state = null;\n    }\n\n  }\n});\nexport const {\n  setUser\n} = notifSlice.actions;\nexport const logIn = credentials => {\n  return async dispatch => {\n    try {\n      const loggedInUser = await loginService.login(credentials);\n      dispatch(setUser(loggedInUser));\n      window.localStorage.setItem('LoggedBlogappUser', JSON, stringify(loggedInUser));\n      blogService.setToken(loggedInUser.token);\n    } catch (exception) {}\n  };\n};\nexport default notifSlice.reducer;","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/reducers/userReducer.js"],"names":["createSlice","loginService","blogService","initialState","userSlice","name","reducers","setUser","state","action","payload","clearUser","notifSlice","actions","logIn","credentials","dispatch","loggedInUser","login","window","localStorage","setItem","JSON","stringify","setToken","token","exception","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,MAAMC,YAAY,GAAG,IAArB;AACA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAe;AAClB;AACA,aAAOD,KAAK,GAACC,MAAM,CAACC,OAApB;AACH,KAJK;;AAKNC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrB,aAAOD,KAAK,GAAG,IAAf;AACH;;AAPK;AAHgB,CAAD,CAA7B;AAcA,OAAO,MAAM;AAAED,EAAAA;AAAF,IAAcK,UAAU,CAACC,OAA/B;AACP,OAAO,MAAMC,KAAK,GAAGC,WAAW,IAAI;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAG;AACC,YAAMC,YAAY,GAAG,MAAMhB,YAAY,CAACiB,KAAb,CAAmBH,WAAnB,CAA3B;AACAC,MAAAA,QAAQ,CAACT,OAAO,CAACU,YAAD,CAAR,CAAR;AACAE,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,EAAiDC,IAAjD,EAAsDC,SAAS,CAACN,YAAD,CAA/D;AACAf,MAAAA,WAAW,CAACsB,QAAZ,CAAqBP,YAAY,CAACQ,KAAlC;AACH,KALD,CAMA,OAAMC,SAAN,EAAgB,CAEf;AACR,GAVG;AAWH,CAZM;AAaP,eAAed,UAAU,CAACe,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport loginService from '../services/login.js'\nimport blogService from '.../services/blogs.js'\nconst initialState = null\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser(state, action){\n            //{console.log(action.payload)}\n            return state=action.payload\n        },\n        clearUser(state, action) {\n            return state = null\n        }\n    }\n})\n\nexport const { setUser } = notifSlice.actions\nexport const logIn = credentials => {\n    return async dispatch => {\n        try{\n            const loggedInUser = await loginService.login(credentials)\n            dispatch(setUser(loggedInUser))\n            window.localStorage.setItem('LoggedBlogappUser', JSON,stringify(loggedInUser))\n            blogService.setToken(loggedInUser.token)\n        }    \n        catch(exception){\n\n        }\n}\n}\nexport default notifSlice.reducer\n"]},"metadata":{},"sourceType":"module"}