{"ast":null,"code":"var _jsxFileName = \"/home/isaac/git/react_stuff/blog-redux-router-styling/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm.js';\nimport PostForm from './components/PostForm.js';\nimport Togglable from './components/Togglable.js';\nimport GoodNotif from './components/GoodNotif.js';\nimport blogService from './services/blogs';\nimport loginService from './services/login.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNotif, clearNotif } from './reducers/notifReducer.js';\nimport { initializePosts } from './reducers/postReducer.js';\nimport { setUser, clearUser } from './reducers/userReducer.js';\nimport { addPost, setPosts, addaPost } from './reducers/postReducer.js';\nimport Users from './components/Users';\nimport Posts from './components/Posts.js';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [vblogs, setBlogs] = useState([]);\n  const [successMsg, setSuccessMsg] = useState(null);\n  const [errMsg, setErrMsg] = useState(null);\n  const dispatch = useDispatch();\n  const notif = useSelector(state => state.notifs);\n  useEffect(() => {\n    dispatch(initializePosts());\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n      blogService.setToken(user.token);\n    }\n  }, []);\n  const user = useSelector(state => state.user);\n  const blogs = useSelector(state => state.posts);\n\n  const handleLogOut = () => {\n    window.localStorage.clear();\n    dispatch(clearUser());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GoodNotif, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8psb9PFIbfiFSYXosxofL2CUsT0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/App.js"],"names":["useState","useEffect","Blog","LoginForm","PostForm","Togglable","GoodNotif","blogService","loginService","useDispatch","useSelector","setNotif","clearNotif","initializePosts","setUser","clearUser","addPost","setPosts","addaPost","Users","Posts","Routes","Route","App","vblogs","setBlogs","successMsg","setSuccessMsg","errMsg","setErrMsg","dispatch","notif","state","notifs","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","blogs","posts","handleLogOut","clear"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm.js'\nimport PostForm from './components/PostForm.js'\nimport Togglable from './components/Togglable.js'\nimport GoodNotif from './components/GoodNotif.js'\nimport blogService from './services/blogs'\nimport loginService from './services/login.js'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {setNotif, clearNotif} from './reducers/notifReducer.js'\nimport {initializePosts} from './reducers/postReducer.js'\nimport {setUser, clearUser} from './reducers/userReducer.js'\nimport {addPost, setPosts, addaPost} from './reducers/postReducer.js'\nimport Users from './components/Users';\nimport Posts from './components/Posts.js';\nimport {Routes, Route} from 'react-router-dom';\nconst App = () => {\n    const [vblogs, setBlogs] = useState([])\n    const [successMsg, setSuccessMsg] = useState(null)\n    const [errMsg, setErrMsg] = useState(null)\n    const dispatch = useDispatch()\n    const notif = useSelector(state => state.notifs)\n\n  useEffect(() => {\n      dispatch(initializePosts())\n  }, [dispatch, ])\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if(loggedUserJSON){\n            const user = JSON.parse(loggedUserJSON)\n            dispatch(setUser(user))\n            blogService.setToken(user.token)\n        }\n    }, [])\n    const user = useSelector(state => state.user)\n    const blogs = useSelector(state => state.posts)\n    const handleLogOut = () => {\n        window.localStorage.clear();\n        dispatch(clearUser());\n    }\n  return (\n    <div>\n      <GoodNotif />\n      <Routes>\n        <Route path=\"/\" element={<Posts />} />\n        <Route path=\"/users\" element={<Users />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}