{"ast":null,"code":"var _jsxFileName = \"/home/isaac/git/react_stuff/blog-redux-router-styling/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Blog from './Blog';\nimport LoginForm from './LoginForm.js';\nimport PostForm from './PostForm.js';\nimport Togglable from './Togglable.js';\nimport GoodNotif from './GoodNotif.js';\nimport blogService from '../services/blogs';\nimport loginService from '../services/login.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNotif, clearNotif } from './reducers/notifReducer.js';\nimport { initializePosts } from './reducers/postReducer.js';\nimport { setUser, clearUser } from './reducers/userReducer.js';\nimport { addPost, setPosts, addaPost } from './reducers/postReducer.js';\nimport Users from './components/Users';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [vblogs, setBlogs] = useState([]);\n  const [successMsg, setSuccessMsg] = useState(null);\n  const [errMsg, setErrMsg] = useState(null);\n  const dispatch = useDispatch();\n  const notif = useSelector(state => state.notifs);\n  useEffect(() => {\n    dispatch(initializePosts());\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const addPost = postObject => {\n    dispatch(addaPost(postObject));\n    dispatch(setNotif(\"Successsssss\"));\n    setTimeout(() => {\n      dispatch(clearNotif());\n    }, 3000);\n  };\n\n  const updateLikes = blog => {\n    const updatedBlog = {\n      user: blog.user.id,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      likes: blog.likes\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user === null ? /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"login\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogOut,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n          buttonLabel: \"new post\",\n          children: /*#__PURE__*/_jsxDEV(PostForm, {\n            createPost: addPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n          blog: blog,\n          handleLikes: () => updateLikes(blog),\n          handleDel: () => handleDel(blog.id)\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  };\n};\n\n_s(Posts, \"k57Vhrur7aTDUNjD5f1/zBqPgRQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/components/Posts.js"],"names":["useState","useEffect","Blog","LoginForm","PostForm","Togglable","GoodNotif","blogService","loginService","useDispatch","useSelector","setNotif","clearNotif","initializePosts","setUser","clearUser","addPost","setPosts","addaPost","Users","Routes","Route","Posts","vblogs","setBlogs","successMsg","setSuccessMsg","errMsg","setErrMsg","dispatch","notif","state","notifs","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","postObject","setTimeout","updateLikes","blog","updatedBlog","id","author","title","url","likes","name","handleLogOut","blogs","map","handleDel"],"mappings":"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","sourcesContent":["\nimport { useState, useEffect } from 'react'\nimport Blog from './Blog'\nimport LoginForm from './LoginForm.js'\nimport PostForm from './PostForm.js'\nimport Togglable from './Togglable.js'\nimport GoodNotif from './GoodNotif.js'\nimport blogService from '../services/blogs'\nimport loginService from '../services/login.js'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {setNotif, clearNotif} from './reducers/notifReducer.js'\nimport {initializePosts} from './reducers/postReducer.js'\nimport {setUser, clearUser} from './reducers/userReducer.js'\nimport {addPost, setPosts, addaPost} from './reducers/postReducer.js'\nimport Users from './components/Users';\nimport {Routes, Route} from 'react-router-dom';\nconst Posts = () => {\n    const [vblogs, setBlogs] = useState([])\n    const [successMsg, setSuccessMsg] = useState(null)\n    const [errMsg, setErrMsg] = useState(null)\n    const dispatch = useDispatch()\n    const notif = useSelector(state => state.notifs)\n\n  useEffect(() => {\n      dispatch(initializePosts())\n  }, [dispatch, ])\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if(loggedUserJSON){\n            const user = JSON.parse(loggedUserJSON)\n            dispatch(setUser(user))\n            blogService.setToken(user.token)\n        }\n    }, [])\n    const addPost = postObject => {\n        dispatch(addaPost(postObject))\n        dispatch(setNotif(\"Successsssss\"))\n        setTimeout(()=> {\n            dispatch(clearNotif())\n        },3000)\n    }\n\n    const updateLikes = (blog) => {\n        const updatedBlog = {\n            user: blog.user.id,\n            author: blog.author,\n            title: blog.title,\n            url: blog.url,\n            likes: blog.likes\n        }\n    return(\n        <div>\n      {user === null ?\n        <Togglable buttonLabel='login'>\n          <LoginForm/>\n        </Togglable> :\n       <div>\n            <p>{user.name} logged in</p>\n            <button onClick={handleLogOut } >logout</button>\n            <Togglable buttonLabel=\"new post\">\n                <PostForm createPost={addPost}/>\n            </Togglable>\n            {blogs.map(blog =>\n            <Blog key={blog.id} blog={blog} handleLikes={()=> updateLikes(blog)} handleDel={()=> handleDel(blog.id)} />)}\n        </div>\n      }\n        </div>\n    )\n}}\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}