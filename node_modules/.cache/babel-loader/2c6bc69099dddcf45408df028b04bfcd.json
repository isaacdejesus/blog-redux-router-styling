{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport loginService from '../services/login.js';\nimport blogService from '../services/blogs.js';\nimport { setNotif, clearNotif } from '../reducers/notifReducer.js';\nconst initialState = null;\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      //{console.log(action.payload)}\n      return state = action.payload;\n    },\n\n    clearUser(state, action) {\n      return state = null;\n    }\n\n  }\n});\nexport const {\n  setUser\n} = userSlice.actions;\nexport const logIn = credentials => {\n  return async dispatch => {\n    try {\n      const loggedInUser = await loginService.login(credentials);\n      dispatch(setUser(loggedInUser));\n      window.localStorage.setItem('LoggedBlogappUser', JSON.stringify(loggedInUser));\n      blogService.setToken(loggedInUser.token);\n    } catch (exception) {\n      dispatch(setNotif(\"invalid credentials\"));\n      setTimeout(() => {\n        dispatch(clearNotif());\n      }, 4000);\n    }\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/reducers/userReducer.js"],"names":["createSlice","loginService","blogService","setNotif","clearNotif","initialState","userSlice","name","reducers","setUser","state","action","payload","clearUser","actions","logIn","credentials","dispatch","loggedInUser","login","window","localStorage","setItem","JSON","stringify","setToken","token","exception","setTimeout","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,6BAArC;AACA,MAAMC,YAAY,GAAG,IAArB;AACA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAe;AAClB;AACA,aAAOD,KAAK,GAACC,MAAM,CAACC,OAApB;AACH,KAJK;;AAKNC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrB,aAAOD,KAAK,GAAG,IAAf;AACH;;AAPK;AAHgB,CAAD,CAA7B;AAcA,OAAO,MAAM;AAAED,EAAAA;AAAF,IAAcH,SAAS,CAACQ,OAA9B;AACP,OAAO,MAAMC,KAAK,GAAGC,WAAW,IAAI;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAG;AACC,YAAMC,YAAY,GAAG,MAAMjB,YAAY,CAACkB,KAAb,CAAmBH,WAAnB,CAA3B;AACAC,MAAAA,QAAQ,CAACR,OAAO,CAACS,YAAD,CAAR,CAAR;AACAE,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,EAAiDC,IAAI,CAACC,SAAL,CAAeN,YAAf,CAAjD;AACAhB,MAAAA,WAAW,CAACuB,QAAZ,CAAqBP,YAAY,CAACQ,KAAlC;AACH,KALD,CAMA,OAAMC,SAAN,EAAgB;AACZV,MAAAA,QAAQ,CAACd,QAAQ,CAAC,qBAAD,CAAT,CAAR;AACAyB,MAAAA,UAAU,CAAC,MAAK;AACZX,QAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACR,GAbG;AAcH,CAfM;AAgBP,eAAeE,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport loginService from '../services/login.js'\nimport blogService from '../services/blogs.js'\nimport { setNotif, clearNotif } from '../reducers/notifReducer.js'\nconst initialState = null\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser(state, action){\n            //{console.log(action.payload)}\n            return state=action.payload\n        },\n        clearUser(state, action) {\n            return state = null\n        }\n    }\n})\n\nexport const { setUser } = userSlice.actions\nexport const logIn = credentials => {\n    return async dispatch => {\n        try{\n            const loggedInUser = await loginService.login(credentials)\n            dispatch(setUser(loggedInUser))\n            window.localStorage.setItem('LoggedBlogappUser', JSON.stringify(loggedInUser))\n            blogService.setToken(loggedInUser.token)\n        }    \n        catch(exception){\n            dispatch(setNotif(\"invalid credentials\"))\n            setTimeout(()=> {\n                dispatch(clearNotif())\n            }, 4000)\n        }\n}\n}\nexport default userSlice.reducer\n"]},"metadata":{},"sourceType":"module"}