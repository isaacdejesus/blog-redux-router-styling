{"ast":null,"code":"var _jsxFileName = \"/home/isaac/git/react_stuff/blog-redux-router-styling/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm.js';\nimport PostForm from './components/PostForm.js';\nimport Togglable from './components/Togglable.js';\nimport GoodNotif from './components/GoodNotif.js';\nimport blogService from './services/blogs';\nimport loginService from './services/login.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNotif, clearNotif } from './reducers/notifReducer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [successMsg, setSuccessMsg] = useState(null);\n  const [errMsg, setErrMsg] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    })));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setSuccessMsg(\"Logged in successfully\");\n      setTimeout(() => {\n        setSuccessMsg(null);\n      }, 3000);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      //setErrMsg('Wront credentials')\n      dispatch(setNotif(\"wrong credentials\"));\n      setTimeout(() => {\n        //setErrMsg(null)\n        dispatch(clearNotif());\n      }, 4000);\n    }\n  };\n\n  const addPost = postObject => {\n    blogService.create(postObject).then(returnedPost => {\n      setBlogs(blogs.concat(returnedPost));\n    });\n    setSuccessMsg(\"post added\");\n    setTimeout(() => {\n      setSuccessMsg(null);\n    }, 3000);\n  };\n\n  const updateLikes = blog => {\n    const updatedBlog = {\n      user: blog.user.id,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      likes: blog.likes\n    };\n    const updatedBlogId = blog.id;\n    blogService.update(blog.id, updatedBlog).then(returnedPost => {\n      setBlogs(blogs.map(blog => blog.id !== updatedBlogId ? blog : returnedPost));\n    });\n    setBlogs(blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    }));\n  };\n\n  const handleDel = id => {\n    const maybe = window.confirm(\"do you really want to delete?\");\n    if (!maybe) return;\n    const toDel = blogs.find(blog => blog.id === id);\n    blogService.del(id).then(persontoDel => {\n      setBlogs(blogs.filter(blog => blog.id !== toDel.id));\n    });\n    setBlogs(blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoodNotif, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: window.localStorage.clear(),\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new post\",\n        children: /*#__PURE__*/_jsxDEV(PostForm, {\n          createPost: addPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        handleLikes: () => updateLikes(blog),\n        handleDel: () => handleDel(blog.id)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"kGlyHx606+/U+3a5pkLvgPXZ4EI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/App.js"],"names":["useState","useEffect","Blog","LoginForm","PostForm","Togglable","GoodNotif","blogService","loginService","useDispatch","useSelector","setNotif","clearNotif","App","blogs","setBlogs","successMsg","setSuccessMsg","errMsg","setErrMsg","dispatch","getAll","then","sort","a","b","likes","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setUser","setToken","token","handleLogin","event","preventDefault","login","username","password","setItem","stringify","setTimeout","setUsername","setPassword","exception","addPost","postObject","create","returnedPost","concat","updateLikes","blog","updatedBlog","id","author","title","url","updatedBlogId","update","map","handleDel","maybe","confirm","toDel","find","del","persontoDel","filter","target","value","name","clear"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm.js'\nimport PostForm from './components/PostForm.js'\nimport Togglable from './components/Togglable.js'\nimport GoodNotif from './components/GoodNotif.js'\nimport blogService from './services/blogs'\nimport loginService from './services/login.js'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {setNotif, clearNotif} from './reducers/notifReducer.js'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [successMsg, setSuccessMsg] = useState(null)\n    const [errMsg, setErrMsg] = useState(null)\n    const dispatch = useDispatch()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs.sort((a,b) => {return b.likes - a.likes}))\n    )  \n  }, [])\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if(loggedUserJSON){\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    }, [])\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try{\n            const user = await loginService.login({\n                username, password\n            })\n            window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n            blogService.setToken(user.token)\n            setUser(user)\n            setSuccessMsg(\"Logged in successfully\")\n            setTimeout(()=> {\n                setSuccessMsg(null)\n            },3000)\n            setUsername('')\n            setPassword('')\n        }\n        catch (exception) {\n            //setErrMsg('Wront credentials')\n            dispatch(setNotif(\"wrong credentials\"))\n            setTimeout(() => {\n                //setErrMsg(null)\n                dispatch(clearNotif())\n            },4000)\n        }\n    }\n    const addPost = postObject => {\n        blogService\n            .create(postObject)\n            .then(returnedPost => {\n                setBlogs(blogs.concat(returnedPost))\n            })\n       setSuccessMsg(\"post added\") \n        setTimeout(()=> {\n            setSuccessMsg(null)\n        },3000)\n    }\n\n    const updateLikes = (blog) => {\n        const updatedBlog = {\n            user: blog.user.id,\n            author: blog.author,\n            title: blog.title,\n            url: blog.url,\n            likes: blog.likes\n        }\n        const updatedBlogId = blog.id\n        blogService\n            .update(blog.id, updatedBlog)\n            .then(returnedPost => {\n                setBlogs(blogs.map(blog => blog.id !== updatedBlogId ? blog : returnedPost))   \n            })\n        setBlogs(blogs.sort((a,b) => {return b.likes - a.likes}))\n    }\n    const handleDel = id => {\n        const maybe = window.confirm(\"do you really want to delete?\")\n        if(!maybe)\n            return\n        const toDel = blogs.find(blog => blog.id === id)\n        blogService\n            .del(id)\n            .then(persontoDel => {\n                setBlogs(blogs.filter(blog => blog.id !== toDel.id))\n            }) \n        \n        setBlogs(blogs.sort((a,b) => {return b.likes - a.likes}))\n    }\n  return (\n    <div>\n      <h2>blogs</h2>\n      <GoodNotif />\n      {user === null ?\n        <Togglable buttonLabel='login'>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({target}) => setUsername(target.value)}\n            handlePasswordChange={({target}) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n        </Togglable> :\n       <div>\n            <p>{user.name} logged in</p>\n            <button onClick={window.localStorage.clear() } >logout</button>\n            <Togglable buttonLabel=\"new post\">\n                <PostForm createPost={addPost}/>\n            </Togglable>\n            {blogs.map(blog =>\n            <Blog key={blog.id} blog={blog} handleLikes={()=> updateLikes(blog)} handleDel={()=> handleDel(blog.id)} />)}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}