{"ast":null,"code":"var _jsxFileName = \"/home/isaac/git/react_stuff/blog-redux-router-styling/src/components/Togglable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Togglable = props => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Togglable, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = Togglable;\nexport default Togglable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Togglable\");","map":{"version":3,"sources":["/home/isaac/git/react_stuff/blog-redux-router-styling/src/components/Togglable.js"],"names":["useState","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMK,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEH,OAAO,GAAG,MAAH,GAAY;AAA9B,GAAxB;AACA,QAAMI,eAAe,GAAG;AAAED,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAH,GAAQ;AAA1B,GAAxB;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEE,eAAZ;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEG,gBAAjB;AAAA,kBAAoCN,KAAK,CAACO;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,KAAK,EAAEF,eAAZ;AAAA,iBACKL,KAAK,CAACQ,QADX,eAEI;AAAQ,QAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlBD;;GAAMP,S;;KAAAA,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react'\nconst Togglable = (props) => {\n    const [visible, setVisible] = useState(false)\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Togglable\n"]},"metadata":{},"sourceType":"module"}